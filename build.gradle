plugins {
    id "com.jfrog.bintray" version "1.7"
}

apply plugin: 'java'
apply plugin: 'maven-publish'

// need the core Processing library to build.
repositories {
    jcenter()
}

dependencies {
    compile "org.processing:core:2.2.1"
    compile "junit:junit:3.8.2"
    compile "com.google.code.gson:gson:2.8.2"
}

group = 'me.lsdo.processing'
version = '0.9.2'
sourceCompatibility = 1.6
targetCompatibility = 1.6

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            if (plugins.hasPlugin('war')) {
                from components.web
            } else {
                from components.java
            }

            artifact sourcesJar
            artifact javadocJar
        }
    }
}


bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

    publications = ['mavenJava']

    pkg {
        repo = 'maven'
        name = 'lsdome-processing'
        userOrg = 'shen-tian'
        licenses = ['The MIT License (MIT)']
        vcsUrl = 'https://github.com/shen-tian/lsdome-processing.git'

        version {
            name = '0.9.2'
            desc = 'LSDome Processing lib'
            vcsTag = '0.9.2'
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
            publish = true
        }
    }
}

jar {
    baseName = 'lsdome-processing'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

task copyJar(type: Copy, dependsOn: build) {
    from ('build/libs/') {
         exclude '**/*sources.jar', '**/*javadoc.jar'
         rename 'lsdome-processing-(.*).jar', 'lsdome.jar'
    }
    into 'library/'
}

task makeArtifact(type: Zip, dependsOn: copyJar){
    archiveName = 'lsdome.zip'
    into 'lsdome'

    from projectDir
    include 'src/**/*'
    include 'library/*'
    include 'examples/**/*'
    include 'reference/**/*'
    include 'README.md'
}
